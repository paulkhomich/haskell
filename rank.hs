-- Удаление элемента по индексу
dele :: Int -> [a] -> [a]
dele 0 (x:xs) = xs
dele n (x:xs) = x : dele (n - 1) xs

-- Определитель матрицы
det :: [[Int]] -> Int
det [[x]] = x
det [[x, y], [xl, yl]] = x * yl - y * xl
det (y:ys) = 
    let l       =   length y - 1    -- Индексы столбцов матрицы
        minors  =   (map (\k -> ((-1) ^ k) * det ( map (\x -> dele k x) ys )) [0 .. l]) -- (-1)^k * det minor
    in              sum $ zipWith (*) y minors -- Суммируем произведения 

-- Все комбинации длины n в списке 
comb :: Int -> [a] -> [[a]]
comb 0 _ = [[]]
comb n x = 
    let l               = length x - 1 -- Все индексы чисел в списке
        subcomb n id    = comb (n-1) $ drop (id+1) x -- Все комбинации подсписка
        connect n id    = map (\xs -> (x !! id) : xs) $ subcomb n id -- Прибавление элемента ко всем комбинация подсписка
    in                    foldr (++) [] $ map (\id -> connect n id) [0 .. l] -- Склеивание всех подсписков


-- [[1,2,3],[4,5,6],[7,8,9]]

-- [ [[1,2,3],[4,5,6]], [[1,2,3], [7,8,9]], [[4,5,6],[7,8,9]] ]



-- [[1,2,3],[4,5,6]]
-- 

-- [ [ [[1,2],[1,3],[2,3]] , [[4,5],[4,6],[5,6]] ], [[1,2,3], [7,8,9]], [[4,5,6],[7,8,9]] ]
